# 簡易仕様書サンプル

### 作者
熊野広輝


### アプリ名
グルメ検索


#### コンセプト
シンプルで充分なレストラン吟味ができるアプリケーション


#### こだわったポイント
一覧画面では最低限の情報を表示し、見やすい画面を提供
興味をもった飲食店は詳細画面で、情報、所在地を分かりやすく得ることができる
3画面の画面移動はフッターで簡単に（検索結果画面と店舗詳細画面は検索キーワードが保持されており、同キーワードで複数店舗の詳細を見ることが可能）


### 該当プロジェクトのリポジトリ URL（GitHub,GitLab など Git ホスティングサービスを利用されている場合）
https://github.com/kumano4/fenrir


## 開発環境
### 開発環境
Visual Studio Code


### 開発言語
Python3.10.12


### フレームワーク
Flask3.1.0


### テーブル定義(ER図)などの設計ドキュメント（ウェブアプリ）


Flask
|
|─ app.py
|
|──template
|　　　　|
|　　　　|─search.html
|　　　　|
|　　　　|─result.html
|　　　　|
|　　　　|─Detail.html
|
|
|─.env



### 開発環境構築手順(ウェブアプリ)他の開発者が提出物のウェブアプリを動かし確認できるようにするための具体的な手順

ターミナルで上から順におこなってください。
- sudo apt install build-essential python3-pip libffi-dev python3-dev python3-setuptools libssl-dev
- cd 保存したディレクトリ名
- python3 -m venv venv
- source venv/bin/activate
- pip install flask
- pip3 install Flask-Paginate
- pip install geopy
- flask run or python app.py

ターミナル上のrunning on http://127.0.0.1:5000をクリック

位置情報が取得できない場合
「設定」→「プライバシーとセキュリティ」→「位置情報」の
「位置情報」、「アプリに位置情報へのアクセスを許可する」をオンに



## 動作対象端末・OS
### 動作対象OS
windows11


## 開発期間
8日間


## アプリケーション機能


### 機能一覧
- レストラン検索：ホットペッパーグルメサーチAPIを使用して、現在地周辺の飲食店を検索する。
- レストラン情報取得：ホットペッパーグルメサーチAPIを使用して、飲食店の詳細情報を取得する。
- 地図アプリ連携：飲食店の所在地をグーグルマップに連携する。


### 画面一覧
- 検索画面 ：キーワードを指定してレストランを検索する。
- 一覧画面 ：検索結果の飲食店を一覧表示する。
- 詳細画面 ：飲食店の詳細情報、所在地を表示する。


### 使用しているAPI,SDK,ライブラリなど
## API
- ホットペッパーグルメサーチAPI
- Geolocation API
- MAPs JavaScript API
- Geocoding API


## ライブラリ
- flask
- requests
- os
- dotenv
- flask_paginate
- geopy.distance


### 技術面でアドバイスして欲しいポイント
飲食店の一覧リストを使いやすく、見やすくしたい
コースありなし表記がない飲食店の場合、コース表記を消すようにしたい
こだわり条件のような、検索条件を追加できるようにしたい（複数個含め）
画像クリックではなく、一覧画面で区切られているエリアをクリックすることで、店舗詳細画面にいくようにしたい


## デザイン面でこだわったポイント
各画面をウィンドウで分けている点。
一覧画面では各店舗の情報を限定し、見やすい画面にした。一方で詳細画面では、
一覧画面と詳細画面は検索キーワードが保持されており、同キーワードで何回も画面を行き来することが可能。これにより複数店舗の詳細を見ることが可能。
画像クリックで各詳細画面にいくことができる点。


## 自己評価
・良い点
　はじめてのFlask実装だったが、無事アプリを作ることができた。
　一覧画面では一店舗あたりの情報量をおさえ、興味のある店舗を見つけやすくした。　　
　詳細画面では店舗の情報を詰め込み、所在地もすぐにわかるようにした。
　pythonライブラリを利用し、現在地と飲食店の距離やページング機能を比較的簡単に実装できた。

・悪い点、改善が見込める点
　項目が画像の横に配置できず、スペースの有効活用の余地を感じる。
　画面が寂しく、ユーザが継続的に使うには物足りなく感じる。
　

・総評
　機能面は過不足なく機能しており、よくできていると思う。
　画面の華やかさなど画面構成などは改善点があり、突き詰めていく必要があると感じる。

